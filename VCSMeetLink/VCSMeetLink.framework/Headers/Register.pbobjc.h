// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: register.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ImBody;
@class RemoveAccount;
@class WaitingAccount;
GPB_ENUM_FWD_DECLARE(ChatResult);
GPB_ENUM_FWD_DECLARE(ConferenceRole);
GPB_ENUM_FWD_DECLARE(InviteResponse);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum InviteStatus

typedef GPB_ENUM(InviteStatus) {
  /** 等待中 */
  InviteStatus_Waiting = 0,

  /** 接听 */
  InviteStatus_Accepted = 1,

  /** 拒绝 */
  InviteStatus_Rejected = 2,

  /** 未接听 */
  InviteStatus_Timeout = 3,

  /** 呼叫失败 */
  InviteStatus_Error = 4,

  /** 对方忙 */
  InviteStatus_Busy = 5,

  /** 取消呼叫 */
  InviteStatus_Canceled = 6,

  /** 移除 */
  InviteStatus_Removed = 7,

  /** 已邀请 */
  InviteStatus_Invite = 8,

  /** 通话中断 */
  InviteStatus_Interrupt = 9,

  /** 挂断 */
  InviteStatus_Hangup = 10,

  /** 网络异常 */
  InviteStatus_Abnormal = 11,

  /** 另一端已接听 */
  InviteStatus_AcceptedByOther = 12,
};

GPBEnumDescriptor *InviteStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL InviteStatus_IsValidValue(int32_t value);

#pragma mark - RegisterRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface RegisterRoot : GPBRootObject
@end

#pragma mark - WaitingAccount

typedef GPB_ENUM(WaitingAccount_FieldNumber) {
  WaitingAccount_FieldNumber_Id_p = 1,
  WaitingAccount_FieldNumber_Name = 2,
  WaitingAccount_FieldNumber_Nickname = 3,
  WaitingAccount_FieldNumber_Portrait = 4,
  WaitingAccount_FieldNumber_Status = 5,
  WaitingAccount_FieldNumber_RoomNo = 6,
  WaitingAccount_FieldNumber_UpdatedAt = 7,
  WaitingAccount_FieldNumber_CreatedAt = 8,
  WaitingAccount_FieldNumber_CallId = 9,
  WaitingAccount_FieldNumber_CallType = 10,
  WaitingAccount_FieldNumber_RoomPwd = 11,
  WaitingAccount_FieldNumber_ExtendInfo = 12,
  WaitingAccount_FieldNumber_Version = 13,
  WaitingAccount_FieldNumber_CallerAccountId = 14,
};

GPB_FINAL @interface WaitingAccount : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;
/** Test to see if @c nickname has been set. */
@property(nonatomic, readwrite) BOOL hasNickname;

@property(nonatomic, readwrite, copy, null_resettable) NSString *portrait;
/** Test to see if @c portrait has been set. */
@property(nonatomic, readwrite) BOOL hasPortrait;

@property(nonatomic, readwrite) InviteStatus status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomNo;
/** Test to see if @c roomNo has been set. */
@property(nonatomic, readwrite) BOOL hasRoomNo;

@property(nonatomic, readwrite) int64_t updatedAt;

@property(nonatomic, readwrite) BOOL hasUpdatedAt;
@property(nonatomic, readwrite) int64_t createdAt;

@property(nonatomic, readwrite) BOOL hasCreatedAt;
/** 新加的字段 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *callId;
/** Test to see if @c callId has been set. */
@property(nonatomic, readwrite) BOOL hasCallId;

/** 会议呼叫类型（0:普通会议 1.语音通话 2.视频通话 3.视频会议） */
@property(nonatomic, readwrite) int32_t callType;

@property(nonatomic, readwrite) BOOL hasCallType;
/** 会议密码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomPwd;
/** Test to see if @c roomPwd has been set. */
@property(nonatomic, readwrite) BOOL hasRoomPwd;

/** 自定义信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *extendInfo;
/** Test to see if @c extendInfo has been set. */
@property(nonatomic, readwrite) BOOL hasExtendInfo;

/** 版本信息，默认从1开始 */
@property(nonatomic, readwrite) int32_t version;

@property(nonatomic, readwrite) BOOL hasVersion;
/** 呼叫方的accountId */
@property(nonatomic, readwrite, copy, null_resettable) NSString *callerAccountId;
/** Test to see if @c callerAccountId has been set. */
@property(nonatomic, readwrite) BOOL hasCallerAccountId;

@end

#pragma mark - RegHeartbeatRequest

typedef GPB_ENUM(RegHeartbeatRequest_FieldNumber) {
  RegHeartbeatRequest_FieldNumber_Token = 1,
  RegHeartbeatRequest_FieldNumber_AccountId = 2,
  RegHeartbeatRequest_FieldNumber_Version = 3,
};

/**
 * 心跳
 **/
GPB_FINAL @interface RegHeartbeatRequest : GPBMessage

/** 登录Token */
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

/** 帐号ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accountId;
/** Test to see if @c accountId has been set. */
@property(nonatomic, readwrite) BOOL hasAccountId;

/** 版本信息，默认从1开始 */
@property(nonatomic, readwrite) int32_t version;

@property(nonatomic, readwrite) BOOL hasVersion;
@end

#pragma mark - OfflineRequest

typedef GPB_ENUM(OfflineRequest_FieldNumber) {
  OfflineRequest_FieldNumber_Token = 1,
  OfflineRequest_FieldNumber_AccountId = 2,
};

/**
 * 离线
 **/
GPB_FINAL @interface OfflineRequest : GPBMessage

/** 登录Token */
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

/** 帐号ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accountId;
/** Test to see if @c accountId has been set. */
@property(nonatomic, readwrite) BOOL hasAccountId;

@end

#pragma mark - InviteRequest

typedef GPB_ENUM(InviteRequest_FieldNumber) {
  InviteRequest_FieldNumber_Token = 1,
  InviteRequest_FieldNumber_InviteId = 2,
  InviteRequest_FieldNumber_AccountId = 3,
  InviteRequest_FieldNumber_RoomNo = 4,
  InviteRequest_FieldNumber_TargetId = 5,
  InviteRequest_FieldNumber_RoomMode = 6,
  InviteRequest_FieldNumber_Push = 7,
};

/**
 * 邀请
 **/
GPB_FINAL @interface InviteRequest : GPBMessage

/** 授权码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

/** 邀请ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteId;
/** Test to see if @c inviteId has been set. */
@property(nonatomic, readwrite) BOOL hasInviteId;

/** 邀请者ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accountId;
/** Test to see if @c accountId has been set. */
@property(nonatomic, readwrite) BOOL hasAccountId;

/** 房间ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomNo;
/** Test to see if @c roomNo has been set. */
@property(nonatomic, readwrite) BOOL hasRoomNo;

/** 目标帐号ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *targetId;
/** Test to see if @c targetId has been set. */
@property(nonatomic, readwrite) BOOL hasTargetId;

/** 0-音视频；1-音频 */
@property(nonatomic, readwrite) int32_t roomMode;

@property(nonatomic, readwrite) BOOL hasRoomMode;
/** 如果不在线，是否尝试推送 */
@property(nonatomic, readwrite) BOOL push;

@property(nonatomic, readwrite) BOOL hasPush;
@end

#pragma mark - InviteNotification

typedef GPB_ENUM(InviteNotification_FieldNumber) {
  InviteNotification_FieldNumber_InviteId = 1,
  InviteNotification_FieldNumber_AccountId = 2,
  InviteNotification_FieldNumber_AccountName = 3,
  InviteNotification_FieldNumber_RoomNo = 4,
  InviteNotification_FieldNumber_RoomName = 5,
  InviteNotification_FieldNumber_TargetId = 6,
  InviteNotification_FieldNumber_RoomPwd = 7,
  InviteNotification_FieldNumber_RoomMode = 8,
  InviteNotification_FieldNumber_AccountPortrait = 9,
};

/**
 * 邀请通知
 **/
GPB_FINAL @interface InviteNotification : GPBMessage

/** 邀请ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteId;
/** Test to see if @c inviteId has been set. */
@property(nonatomic, readwrite) BOOL hasInviteId;

/** 邀请者ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accountId;
/** Test to see if @c accountId has been set. */
@property(nonatomic, readwrite) BOOL hasAccountId;

/** 邀请者名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accountName;
/** Test to see if @c accountName has been set. */
@property(nonatomic, readwrite) BOOL hasAccountName;

/** 房间ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomNo;
/** Test to see if @c roomNo has been set. */
@property(nonatomic, readwrite) BOOL hasRoomNo;

/** 房间名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomName;
/** Test to see if @c roomName has been set. */
@property(nonatomic, readwrite) BOOL hasRoomName;

/** 目标帐号ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *targetId;
/** Test to see if @c targetId has been set. */
@property(nonatomic, readwrite) BOOL hasTargetId;

/** 进入密码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomPwd;
/** Test to see if @c roomPwd has been set. */
@property(nonatomic, readwrite) BOOL hasRoomPwd;

/** 0-音视频；1-音频 */
@property(nonatomic, readwrite) int32_t roomMode;

@property(nonatomic, readwrite) BOOL hasRoomMode;
/** 邀请者头像地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accountPortrait;
/** Test to see if @c accountPortrait has been set. */
@property(nonatomic, readwrite) BOOL hasAccountPortrait;

@end

#pragma mark - InviteConfirm

typedef GPB_ENUM(InviteConfirm_FieldNumber) {
  InviteConfirm_FieldNumber_InviteId = 1,
  InviteConfirm_FieldNumber_InitiatorId = 2,
  InviteConfirm_FieldNumber_ReceiverId = 3,
  InviteConfirm_FieldNumber_RoomNo = 4,
  InviteConfirm_FieldNumber_Response = 5,
};

/**
 * 邀请确认
 **/
GPB_FINAL @interface InviteConfirm : GPBMessage

/** 邀请ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteId;
/** Test to see if @c inviteId has been set. */
@property(nonatomic, readwrite) BOOL hasInviteId;

/** 邀请发起者ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *initiatorId;
/** Test to see if @c initiatorId has been set. */
@property(nonatomic, readwrite) BOOL hasInitiatorId;

/** 邀请接收者ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *receiverId;
/** Test to see if @c receiverId has been set. */
@property(nonatomic, readwrite) BOOL hasReceiverId;

/** 房间ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomNo;
/** Test to see if @c roomNo has been set. */
@property(nonatomic, readwrite) BOOL hasRoomNo;

/** 1-接起；2-拒绝；3-忙；4-取消 */
@property(nonatomic, readwrite) enum InviteResponse response;

@property(nonatomic, readwrite) BOOL hasResponse;
@end

#pragma mark - Call

typedef GPB_ENUM(Call_FieldNumber) {
  Call_FieldNumber_Token = 1,
  Call_FieldNumber_AccountId = 2,
  Call_FieldNumber_RoomNo = 3,
  Call_FieldNumber_Restart = 4,
  Call_FieldNumber_AccountsArray = 5,
  Call_FieldNumber_Role = 6,
};

/**
 * 呼叫
 **/
GPB_FINAL @interface Call : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@property(nonatomic, readwrite, copy, null_resettable) NSString *accountId;
/** Test to see if @c accountId has been set. */
@property(nonatomic, readwrite) BOOL hasAccountId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomNo;
/** Test to see if @c roomNo has been set. */
@property(nonatomic, readwrite) BOOL hasRoomNo;

@property(nonatomic, readwrite) BOOL restart;

@property(nonatomic, readwrite) BOOL hasRestart;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<WaitingAccount*> *accountsArray;
/** The number of items in @c accountsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger accountsArray_Count;

/** 参会角色 0:嘉宾,6:观众 */
@property(nonatomic, readwrite) enum ConferenceRole role;

@property(nonatomic, readwrite) BOOL hasRole;
@end

#pragma mark - CallCancel

typedef GPB_ENUM(CallCancel_FieldNumber) {
  CallCancel_FieldNumber_Token = 1,
  CallCancel_FieldNumber_AccountId = 2,
  CallCancel_FieldNumber_RoomNo = 3,
  CallCancel_FieldNumber_TargetIdArray = 4,
};

/**
 * 取消呼叫(老的移除功能)
 **/
GPB_FINAL @interface CallCancel : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@property(nonatomic, readwrite, copy, null_resettable) NSString *accountId;
/** Test to see if @c accountId has been set. */
@property(nonatomic, readwrite) BOOL hasAccountId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomNo;
/** Test to see if @c roomNo has been set. */
@property(nonatomic, readwrite) BOOL hasRoomNo;

/** 空集合则清除取消所有人 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *targetIdArray;
/** The number of items in @c targetIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger targetIdArray_Count;

@end

#pragma mark - CallCancelNew

typedef GPB_ENUM(CallCancelNew_FieldNumber) {
  CallCancelNew_FieldNumber_Token = 1,
  CallCancelNew_FieldNumber_AccountId = 2,
  CallCancelNew_FieldNumber_RoomNo = 3,
  CallCancelNew_FieldNumber_AccountsArray = 4,
};

/**
 * 取消呼叫
 **/
GPB_FINAL @interface CallCancelNew : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@property(nonatomic, readwrite, copy, null_resettable) NSString *accountId;
/** Test to see if @c accountId has been set. */
@property(nonatomic, readwrite) BOOL hasAccountId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomNo;
/** Test to see if @c roomNo has been set. */
@property(nonatomic, readwrite) BOOL hasRoomNo;

/** 清除取消的集合 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<WaitingAccount*> *accountsArray;
/** The number of items in @c accountsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger accountsArray_Count;

@end

#pragma mark - CallRemove

typedef GPB_ENUM(CallRemove_FieldNumber) {
  CallRemove_FieldNumber_Token = 1,
  CallRemove_FieldNumber_AccountId = 2,
  CallRemove_FieldNumber_RoomNo = 3,
  CallRemove_FieldNumber_AccountsArray = 4,
};

/**
 * 移除呼叫
 **/
GPB_FINAL @interface CallRemove : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@property(nonatomic, readwrite, copy, null_resettable) NSString *accountId;
/** Test to see if @c accountId has been set. */
@property(nonatomic, readwrite) BOOL hasAccountId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomNo;
/** Test to see if @c roomNo has been set. */
@property(nonatomic, readwrite) BOOL hasRoomNo;

/** 空集合则清除移除所有人 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RemoveAccount*> *accountsArray;
/** The number of items in @c accountsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger accountsArray_Count;

@end

#pragma mark - WaitingRoom

typedef GPB_ENUM(WaitingRoom_FieldNumber) {
  WaitingRoom_FieldNumber_Token = 1,
  WaitingRoom_FieldNumber_Account = 2,
};

/**
 * 会议等候室
 **/
GPB_FINAL @interface WaitingRoom : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@property(nonatomic, readwrite, strong, null_resettable) WaitingAccount *account;
/** Test to see if @c account has been set. */
@property(nonatomic, readwrite) BOOL hasAccount;

@end

#pragma mark - WaitingRoomBroadcast

typedef GPB_ENUM(WaitingRoomBroadcast_FieldNumber) {
  WaitingRoomBroadcast_FieldNumber_Account = 1,
};

/**
 * 会议前握手广播
 **/
GPB_FINAL @interface WaitingRoomBroadcast : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) WaitingAccount *account;
/** Test to see if @c account has been set. */
@property(nonatomic, readwrite) BOOL hasAccount;

@end

#pragma mark - WaitingRoomUpdate

typedef GPB_ENUM(WaitingRoomUpdate_FieldNumber) {
  WaitingRoomUpdate_FieldNumber_Account = 1,
};

/**
 * 状态更新广播
 **/
GPB_FINAL @interface WaitingRoomUpdate : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) WaitingAccount *account;
/** Test to see if @c account has been set. */
@property(nonatomic, readwrite) BOOL hasAccount;

@end

#pragma mark - PushRequest

typedef GPB_ENUM(PushRequest_FieldNumber) {
  PushRequest_FieldNumber_SenderId = 1,
  PushRequest_FieldNumber_ReceiversArray = 2,
  PushRequest_FieldNumber_Message = 3,
};

/**
 * 发送应用内推送
 **/
GPB_FINAL @interface PushRequest : GPBMessage

/** 发送者用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *senderId;
/** Test to see if @c senderId has been set. */
@property(nonatomic, readwrite) BOOL hasSenderId;

/** 接收者用户ID集合 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *receiversArray;
/** The number of items in @c receiversArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger receiversArray_Count;

/** 推送消息内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

#pragma mark - PushNotification

typedef GPB_ENUM(PushNotification_FieldNumber) {
  PushNotification_FieldNumber_SenderId = 1,
  PushNotification_FieldNumber_SenderName = 2,
  PushNotification_FieldNumber_SenderNickname = 3,
  PushNotification_FieldNumber_SenderPortrait = 4,
  PushNotification_FieldNumber_Message = 5,
};

/**
 * 应用内推送通知
 **/
GPB_FINAL @interface PushNotification : GPBMessage

/** 发送者用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *senderId;
/** Test to see if @c senderId has been set. */
@property(nonatomic, readwrite) BOOL hasSenderId;

/** 发送者用户名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *senderName;
/** Test to see if @c senderName has been set. */
@property(nonatomic, readwrite) BOOL hasSenderName;

/** 发送者昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *senderNickname;
/** Test to see if @c senderNickname has been set. */
@property(nonatomic, readwrite) BOOL hasSenderNickname;

/** 发送者头像地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *senderPortrait;
/** Test to see if @c senderPortrait has been set. */
@property(nonatomic, readwrite) BOOL hasSenderPortrait;

/** 推送消息内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

#pragma mark - RegChatRequest

typedef GPB_ENUM(RegChatRequest_FieldNumber) {
  RegChatRequest_FieldNumber_Token = 1,
  RegChatRequest_FieldNumber_ImBody = 2,
};

GPB_FINAL @interface RegChatRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@property(nonatomic, readwrite, strong, null_resettable) ImBody *imBody;
/** Test to see if @c imBody has been set. */
@property(nonatomic, readwrite) BOOL hasImBody;

@end

#pragma mark - RegChatResponse

typedef GPB_ENUM(RegChatResponse_FieldNumber) {
  RegChatResponse_FieldNumber_Id_p = 1,
  RegChatResponse_FieldNumber_Result = 2,
};

GPB_FINAL @interface RegChatResponse : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

@property(nonatomic, readwrite) enum ChatResult result;

@property(nonatomic, readwrite) BOOL hasResult;
@end

#pragma mark - RegChatNotify

typedef GPB_ENUM(RegChatNotify_FieldNumber) {
  RegChatNotify_FieldNumber_ImBody = 1,
};

GPB_FINAL @interface RegChatNotify : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ImBody *imBody;
/** Test to see if @c imBody has been set. */
@property(nonatomic, readwrite) BOOL hasImBody;

@end

#pragma mark - RegChatRevokeNotify

typedef GPB_ENUM(RegChatRevokeNotify_FieldNumber) {
  RegChatRevokeNotify_FieldNumber_Id_p = 1,
};

GPB_FINAL @interface RegChatRevokeNotify : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

@end

#pragma mark - MeetingBeginNotify

typedef GPB_ENUM(MeetingBeginNotify_FieldNumber) {
  MeetingBeginNotify_FieldNumber_RoomNo = 1,
  MeetingBeginNotify_FieldNumber_RoomPwd = 2,
  MeetingBeginNotify_FieldNumber_Title = 3,
  MeetingBeginNotify_FieldNumber_CreateAccId = 4,
};

/**
 * 会议开始通知
 **/
GPB_FINAL @interface MeetingBeginNotify : GPBMessage

/** 会议号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomNo;
/** Test to see if @c roomNo has been set. */
@property(nonatomic, readwrite) BOOL hasRoomNo;

/** 入会密码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomPwd;
/** Test to see if @c roomPwd has been set. */
@property(nonatomic, readwrite) BOOL hasRoomPwd;

/** 会议标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;
/** Test to see if @c title has been set. */
@property(nonatomic, readwrite) BOOL hasTitle;

/** 会议创建者ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *createAccId;
/** Test to see if @c createAccId has been set. */
@property(nonatomic, readwrite) BOOL hasCreateAccId;

@end

#pragma mark - MeetingEndNotify

typedef GPB_ENUM(MeetingEndNotify_FieldNumber) {
  MeetingEndNotify_FieldNumber_RoomNo = 1,
  MeetingEndNotify_FieldNumber_Title = 2,
};

/**
 * 会议结束通知
 **/
GPB_FINAL @interface MeetingEndNotify : GPBMessage

/** 会议号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomNo;
/** Test to see if @c roomNo has been set. */
@property(nonatomic, readwrite) BOOL hasRoomNo;

/** 会议标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;
/** Test to see if @c title has been set. */
@property(nonatomic, readwrite) BOOL hasTitle;

@end

#pragma mark - InviteConfNoticeNotify

typedef GPB_ENUM(InviteConfNoticeNotify_FieldNumber) {
  InviteConfNoticeNotify_FieldNumber_RoomNo = 1,
  InviteConfNoticeNotify_FieldNumber_ConfId = 2,
  InviteConfNoticeNotify_FieldNumber_Title = 3,
  InviteConfNoticeNotify_FieldNumber_AccountId = 4,
  InviteConfNoticeNotify_FieldNumber_AccountName = 5,
  InviteConfNoticeNotify_FieldNumber_AccountRole = 6,
};

/**
 * 邀请成员信息
 **/
GPB_FINAL @interface InviteConfNoticeNotify : GPBMessage

/** 房间号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomNo;
/** Test to see if @c roomNo has been set. */
@property(nonatomic, readwrite) BOOL hasRoomNo;

/** 会议ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *confId;
/** Test to see if @c confId has been set. */
@property(nonatomic, readwrite) BOOL hasConfId;

/** 会议标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;
/** Test to see if @c title has been set. */
@property(nonatomic, readwrite) BOOL hasTitle;

/** 成员id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accountId;
/** Test to see if @c accountId has been set. */
@property(nonatomic, readwrite) BOOL hasAccountId;

/** 成员名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accountName;
/** Test to see if @c accountName has been set. */
@property(nonatomic, readwrite) BOOL hasAccountName;

/** 角色 */
@property(nonatomic, readwrite) int32_t accountRole;

@property(nonatomic, readwrite) BOOL hasAccountRole;
@end

#pragma mark - RemoveAccount

typedef GPB_ENUM(RemoveAccount_FieldNumber) {
  RemoveAccount_FieldNumber_CallId = 1,
  RemoveAccount_FieldNumber_AccountId = 2,
  RemoveAccount_FieldNumber_TargetId = 3,
};

/**
 * 移除呼叫账号信息
 **/
GPB_FINAL @interface RemoveAccount : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *callId;
/** Test to see if @c callId has been set. */
@property(nonatomic, readwrite) BOOL hasCallId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *accountId;
/** Test to see if @c accountId has been set. */
@property(nonatomic, readwrite) BOOL hasAccountId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *targetId;
/** Test to see if @c targetId has been set. */
@property(nonatomic, readwrite) BOOL hasTargetId;

@end

#pragma mark - RoomsNicknameUpdateNotify

typedef GPB_ENUM(RoomsNicknameUpdateNotify_FieldNumber) {
  RoomsNicknameUpdateNotify_FieldNumber_Id_p = 1,
  RoomsNicknameUpdateNotify_FieldNumber_Nickname = 2,
  RoomsNicknameUpdateNotify_FieldNumber_State = 3,
};

/**
 * 盒子修改姓名通知
 **/
GPB_FINAL @interface RoomsNicknameUpdateNotify : GPBMessage

@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite) BOOL hasId_p;
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;
/** Test to see if @c nickname has been set. */
@property(nonatomic, readwrite) BOOL hasNickname;

@property(nonatomic, readwrite) int32_t state;

@property(nonatomic, readwrite) BOOL hasState;
@end

#pragma mark - CallCardMsgNotify

typedef GPB_ENUM(CallCardMsgNotify_FieldNumber) {
  CallCardMsgNotify_FieldNumber_CallId = 1,
  CallCardMsgNotify_FieldNumber_RoomId = 2,
  CallCardMsgNotify_FieldNumber_AccId = 3,
  CallCardMsgNotify_FieldNumber_SendAccId = 4,
  CallCardMsgNotify_FieldNumber_ConfId = 5,
  CallCardMsgNotify_FieldNumber_RoomNo = 6,
};

/**
 * 呼叫卡片消息，通知hiklink
 **/
GPB_FINAL @interface CallCardMsgNotify : GPBMessage

/** 呼叫唯一ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *callId;
/** Test to see if @c callId has been set. */
@property(nonatomic, readwrite) BOOL hasCallId;

/** 房间ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;
/** Test to see if @c roomId has been set. */
@property(nonatomic, readwrite) BOOL hasRoomId;

/** 接收账号ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accId;
/** Test to see if @c accId has been set. */
@property(nonatomic, readwrite) BOOL hasAccId;

/** 发送账号ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sendAccId;
/** Test to see if @c sendAccId has been set. */
@property(nonatomic, readwrite) BOOL hasSendAccId;

/** 会议ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *confId;
/** Test to see if @c confId has been set. */
@property(nonatomic, readwrite) BOOL hasConfId;

/** 会议房间号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomNo;
/** Test to see if @c roomNo has been set. */
@property(nonatomic, readwrite) BOOL hasRoomNo;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
